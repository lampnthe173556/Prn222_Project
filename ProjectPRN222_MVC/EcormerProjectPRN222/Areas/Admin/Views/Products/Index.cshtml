@model IEnumerable<Product>

@{
    ViewData["Title"] = "Products";
}

<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0">Products</h1>
            </div>
        </div>
    </div>
</div>

<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <button type="button" class="btn btn-primary" onclick="openCreateModal()">
                            <i class="fas fa-plus"></i> Add New Product
                        </button>
                    </div>
                    <div class="card-body">
                        <table id="productsTable" class="table table-bordered table-striped">
                            <thead>
                                <tr>
                                    <th>Image</th>
                                    <th>Name</th>
                                    <th>Category</th>
                                    <th>Price</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>
                                            <img src="@item.Img" alt="@item.ProductName" class="img-size-50">
                                        </td>
                                        <td>@item.ProductName</td>
                                        <td>@item.Category?.CategoryName</td>
                                        <td>$@(item.Price?.ToString() ?? "0")</td>
                                        <td>
                                            <button type="button" class="btn btn-info btn-sm" onclick="openEditModal(@item.ProductId)">
                                                <i class="fas fa-pencil-alt"></i>
                                            </button>
                                            <button type="button" class="btn btn-danger btn-sm" onclick="confirmDelete(@item.ProductId, '@item.ProductName')">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Product Modal -->
<div class="modal fade" id="productModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="modalTitle">Product</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">Ã—</span>
                </button>
            </div>
            <form id="productForm" onsubmit="return saveProduct(event)" enctype="multipart/form-data">
                <div class="modal-body">
                    <input type="hidden" id="productId" name="productId" />
                    <div class="form-group">
                        <label for="productName">Product Name</label>
                        <input type="text" class="form-control" id="productName" name="productName" required>
                    </div>
                    <div class="form-group">
                        <label for="categoryId">Category</label>
                        <select class="form-control select2" id="categoryId" name="categoryId" style="width: 100%;" required>
                            <option value="">Select a category</option>
                            @foreach (var category in ViewBag.Categories)
                            {
                                <option value="@category.Value">@category.Text</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="price">Price</label>
                        <input type="number" class="form-control" id="price" name="price" step="0.01" required>
                    </div>
                    <div class="form-group">
                        <label for="description">Description</label>
                        <textarea class="form-control" id="description" name="description" rows="3"></textarea>
                    </div>
                    <div class="form-group">
                        <label>Product Image</label>
                        <div class="custom-file">
                            <input type="file" class="custom-file-input" id="imageFile" name="imageFile" accept="image/*">
                            <label class="custom-file-label" for="imageFile">Choose file</label>
                        </div>
                        <div id="currentImage" class="mt-2 d-none">
                            <label>Current Image:</label>
                            <img id="previewImage" src="" alt="" class="img-size-64 d-block">
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(function () {
            $("#productsTable").DataTable({
                "responsive": true,
                "lengthChange": false,
                "autoWidth": false,
                "buttons": ["copy", "csv", "excel", "pdf", "print"]
            }).buttons().container().appendTo('#productsTable_wrapper .col-md-6:eq(0)');

            $('.select2').select2();
            
            $('.custom-file-input').on('change', function() {
                var fileName = $(this).val().split('\\').pop();
                $(this).next('.custom-file-label').html(fileName);
                
                // Preview selected image
                if (this.files && this.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function(e) {
                        $('#previewImage').attr('src', e.target.result);
                        $('#currentImage').removeClass('d-none');
                    }
                    reader.readAsDataURL(this.files[0]);
                }
            });
        });

        function openCreateModal() {
            $('#modalTitle').text('Create Product');
            $('#productId').val('');
            $('#productName').val('');
            $('#categoryId').val('').trigger('change');
            $('#price').val('');
            $('#description').val('');
            $('#imageFile').val('');
            $('.custom-file-label').html('Choose file');
            $('#currentImage').addClass('d-none');
            $('#productModal').modal('show');
        }

        function openEditModal(id) {
            $.get('@Url.Action("GetProduct")?id=' + id, function(data) {
                $('#modalTitle').text('Edit Product');
                $('#productId').val(data.productId);
                $('#productName').val(data.productName);
                $('#categoryId').val(data.categoryId).trigger('change');
                $('#price').val(data.price);
                $('#description').val(data.description);
                
                // Reset file input
                $('#imageFile').val('');
                $('.custom-file-label').html('Choose file');
                
                // Show current image if exists
                if (data.img) {
                    $('#previewImage').attr('src', data.img);
                    $('#currentImage').removeClass('d-none');
                } else {
                    $('#currentImage').addClass('d-none');
                }
                
                $('#productModal').modal('show');
            });
        }

        function saveProduct(event) {
            event.preventDefault();
            
            var formData = new FormData(document.getElementById('productForm'));
            
            $.ajax({
                url: '@Url.Action("SaveProduct")',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function(response) {
                    if (response.success) {
                        $('#productModal').modal('hide');
                        Swal.fire(
                            'Saved!',
                            'Product has been saved successfully.',
                            'success'
                        ).then(() => {
                            location.reload();
                        });
                    } else {
                        Swal.fire(
                            'Error!',
                            response.message || 'Failed to save product.',
                            'error'
                        );
                    }
                },
                error: function() {
                    Swal.fire(
                        'Error!',
                        'An error occurred while saving the product.',
                        'error'
                    );
                }
            });
            
            return false;
        }

        function confirmDelete(id, name) {
            Swal.fire({
                title: 'Are you sure?',
                text: `Do you want to delete product "${name}"?`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("Delete")',
                        type: 'POST',
                        data: { id: id },
                        success: function(response) {
                            if (response.success) {
                                Swal.fire(
                                    'Deleted!',
                                    'Product has been deleted.',
                                    'success'
                                ).then(() => {
                                    location.reload();
                                });
                            } else {
                                Swal.fire(
                                    'Error!',
                                    response.message || 'Failed to delete product.',
                                    'error'
                                );
                            }
                        },
                        error: function() {
                            Swal.fire(
                                'Error!',
                                'An error occurred while deleting the product.',
                                'error'
                            );
                        }
                    });
                }
            });
        }
    </script>
}