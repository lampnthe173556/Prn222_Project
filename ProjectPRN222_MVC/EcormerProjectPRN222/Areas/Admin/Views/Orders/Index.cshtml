@model IEnumerable<EcormerProjectPRN222.Models.Order>


<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Order List</h3>
            </div>
            <div class="card-body">
                <!-- Filter Section -->
                <div class="mb-4 border p-3 rounded bg-light">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div class="form-group mb-0">
                                <label>Date Range</label>
                                <div class="d-flex">
                                    <div class="input-group mr-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text">From</span>
                                        </div>
                                        <input type="date" class="form-control" id="startDate">
                                    </div>
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text">To</span>
                                        </div>
                                        <input type="date" class="form-control" id="endDate">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-0">
                                <label>Customer Name</label>
                                <input type="text" class="form-control" id="customerFilter" placeholder="Search by customer name">
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group mb-0">
                                <label>Status</label>
                                <select class="form-control" id="statusFilter">
                                    <option value="">All Status</option>
                                    <option value="0">Pending</option>
                                    <option value="1">Accept</option>
                                    <option value="-1">Reject</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-0">
                                <label>Payment Method</label>
                                <select class="form-control" id="paymentFilter">
                                    <option value="">All Methods</option>
                                    @foreach (var payment in (SelectList)ViewData["Payments"])
                                    {
                                        <option value="@payment.Value">@payment.Text</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                </div>

                <table id="ordersTable" class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>STT</th>
                            <th>Date</th>
                            <th>Customer</th>
                            <th>Total</th>
                            <th>Payment</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Order Details Modal -->
<div class="modal fade" id="orderModal" tabindex="-1" role="dialog" aria-labelledby="orderModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="orderModalLabel">Order Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @Html.AntiForgeryToken()
                <div class="row">
                    <div class="col-md-6">
                        <h6>Order Information</h6>
                        <dl class="row">
                            <dt class="col-sm-4">Order ID</dt>
                            <dd class="col-sm-8" id="orderIdDisplay"></dd>
                            <dt class="col-sm-4">Order Date</dt>
                            <dd class="col-sm-8" id="orderDateDisplay"></dd>
                            <dt class="col-sm-4">Total Amount</dt>
                            <dd class="col-sm-8" id="totalAmountDisplay"></dd>
                            <dt class="col-sm-4">Status</dt>
                            <dd class="col-sm-8">
                                <select class="form-control" id="orderStatus">
                                    <option value="0">Pending</option>
                                    @* <option value="1">Confirmed</option> *@
                                    @* <option value="2">Shipping</option> *@
                                    <option value="1">Completed</option>
                                    <option value="-1">Reject</option>
                                </select>
                            </dd>
                        </dl>
                    </div>
                    <div class="col-md-6">
                        <h6>Customer Information</h6>
                        <dl class="row">
                            <dt class="col-sm-4">Name</dt>
                            <dd class="col-sm-8" id="customerNameDisplay"></dd>
                            <dt class="col-sm-4">Email</dt>
                            <dd class="col-sm-8" id="customerEmailDisplay"></dd>
                            <dt class="col-sm-4">Phone</dt>
                            <dd class="col-sm-8" id="customerPhoneDisplay"></dd>
                            <dt class="col-sm-4">Delivery To</dt>
                            <dd class="col-sm-8" id="deliveryAddressDisplay"></dd>
                        </dl>
                    </div>
                </div>

                <h6>Order Items</h6>
                <div class="table-responsive">
                    <table class="table table-bordered table-sm" id="orderItemsTable">
                        <thead>
                            <tr>
                                <th>Product</th>
                                <th>Price</th>
                                <th>Quantity</th>
                                <th>Subtotal</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>

                <div class="row mt-3">
                    <div class="col-md-6">
                        <h6>Payment Information</h6>
                        <dl class="row">
                            <dt class="col-sm-4">Method</dt>
                            <dd class="col-sm-8" id="paymentMethodDisplay"></dd>
                            <dt class="col-sm-4">Description</dt>
                            <dd class="col-sm-8" id="paymentDescDisplay"></dd>
                        </dl>
                    </div>
                    <div class="col-md-6">
                        <h6>Additional Information</h6>
                        <dl class="row">
                            <dt class="col-sm-4">Comment</dt>
                            <dd class="col-sm-8" id="commentDisplay"></dd>
                        </dl>
                    </div>
                </div>
            </div>
            <div class="modal-footer">               
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="updateOrderStatus()">Update Status</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Delete Order</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this order?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" onclick="deleteOrder()">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let table;
        let currentOrderId = 0;

        $(document).ready(function () {
            // Custom filtering function
            $.fn.dataTable.ext.search.push(function(settings, data, dataIndex, rowData) {
                // Get filter values
                const startDate = $('#startDate').val() ? new Date($('#startDate').val()) : null;
                const endDate = $('#endDate').val() ? new Date($('#endDate').val()) : null;
                const customer = $('#customerFilter').val().toLowerCase();
                const status = $('#statusFilter').val();
                const payment = $('#paymentFilter').val();

                // Date filter
                if (startDate || endDate) {
                    const orderDate = new Date(rowData.orderDate);
                    if (startDate && orderDate < startDate) return false;
                    if (endDate && orderDate > endDate) return false;
                }

                // Customer name filter
                if (customer && !rowData.customerName.toLowerCase().includes(customer)) {
                    return false;
                }

                // Status filter
                if (status !== '' && rowData.status != status) {
                    return false;
                }

                // Payment method filter
                if (payment !== '') {
                    const payId = payment;
                    const orderPayId = rowData.payId;
                    if (orderPayId != payId) {
                        return false;
                    }
                }

                return true;
            });

            // Initialize DataTable
            table = $('#ordersTable').DataTable({
                ajax: {
                    url: '/Admin/Orders/GetOrders',
                    type: 'GET',
                    dataSrc: 'data'
                },
                columns: [
                    {
                        data: null,
                        render: function (data, type, row, meta) {
                            return meta.row + 1;
                        }
                    },
                    { 
                        data: 'orderDate',
                        render: function(data) {
                            return moment(data).format('DD/MM/YYYY');
                        }
                    },
                    { data: 'customerName' },
                    { 
                        data: 'totalAmount',
                        render: function(data) {
                            return data ? `$${data.toFixed(2)}` : '';
                        }
                    },
                    { data: 'paymentMethod' },
                    {
                        data: 'status',
                        render: function (data) {
                            const statusClasses = {
                                '0': 'secondary', // Pending
                                // 1: 'info',      Confirmed
                                // 2: 'primary',   Shipping
                                '1': 'success',   // Completed
                                '-1': 'danger'     // Cancelled
                            };
                            const statusNames = {
                                '0': 'Pending',
                                // 1: 'Confirmed',
                                // 2: 'Shipping',
                                '1': 'Accept',
                                '-1': 'Reject'
                            };
                            return `<span class="badge badge-${statusClasses[data]}">${statusNames[data]}</span>`;
                        }
                    },
                    {
                        data: 'orderId',
                        render: function (data) {
                            return `
                                <button class="btn btn-sm btn-info" onclick="showOrderDetails(${data})">
                                    <i class="fas fa-eye"></i>
                                </button>
                            `;
                        }
                    }
                ],
                order: [[0, 'desc']]
            });

            // Add event listeners for filter inputs
            $('#startDate, #endDate, #customerFilter').on('input', function() {
                table.draw();
            });

            $('#statusFilter, #paymentFilter').on('change', function() {
                table.draw();
            });
        });

        function showOrderDetails(id) {
            currentOrderId = id;
            $.get('/Admin/Orders/GetOrderDetails/' + id, function (response) {
                if (response.success) {
                    const { order, items } = response.data;
                    
                    // Fill order information
                    $('#orderIdDisplay').text(order.orderId);
                    $('#orderDateDisplay').text(moment(order.orderDate).format('DD/MM/YYYY'));
                    $('#totalAmountDisplay').text(order.totalAmount ? `$${order.totalAmount.toFixed(2)}` : '');
                    $('#orderStatus').val(order.status);
                    
                    // Fill customer information
                    $('#customerNameDisplay').text(order.customer.fullName);
                    $('#customerEmailDisplay').text(order.customer.email);
                    $('#customerPhoneDisplay').text(order.customer.phone);
                    $('#deliveryAddressDisplay').text(order.locationOrder);
                    
                    // Fill payment information
                    $('#paymentMethodDisplay').text(order.payment.paymentName);
                    $('#paymentDescDisplay').text(order.payment.paymentDes || '');
                    $('#commentDisplay').text(order.comment || '');
                    
                    // Fill order items table
                    const tbody = $('#orderItemsTable tbody');
                    tbody.empty();
                    items.forEach(item => {
                        tbody.append(`
                            <tr>
                                <td>${item.productName}</td>
                                <td>$${item.price.toFixed(2)}</td>
                                <td>${item.quanity}</td>
                                <td>$${item.subTotal.toFixed(2)}</td>
                            </tr>
                        `);
                    });
                    
                    $('#orderModal').modal('show');
                } else {
                    toastr.error(response.message);
                }
            });
        }

        function updateOrderStatus() {
            if (!currentOrderId) return;

            const status = $('#orderStatus').val();
            $.ajax({
                url: '/Admin/Orders/UpdateStatus/' + currentOrderId,
                type: 'POST',
                data: {
                    status: status,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                },
                success: function (response) {
                    if (response.success) {
                        $('#orderModal').modal('hide');
                        table.ajax.reload();
                        toastr.success(response.message);
                    } else {
                        toastr.error(response.message);
                    }
                },
                error: function () {
                    toastr.error('An error occurred');
                }
            });
        }

        function showDeleteConfirmation() {
            $('#orderModal').modal('hide');
            $('#deleteModal').modal('show');
        }

        function deleteOrder() {
            if (!currentOrderId) return;

            $.ajax({
                url: '/Admin/Orders/Delete/' + currentOrderId,
                type: 'POST',
                data: {
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                },
                success: function (response) {
                    $('#deleteModal').modal('hide');
                    if (response.success) {
                        table.ajax.reload();
                        toastr.success(response.message);
                    } else {
                        toastr.error(response.message);
                    }
                    currentOrderId = 0;
                },
                error: function () {
                    toastr.error('An error occurred');
                    currentOrderId = 0;
                }
            });
        }
    </script>
}
