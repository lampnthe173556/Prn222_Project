@model IEnumerable<EcormerProjectPRN222.Models.Account>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Account List</h3>
                <div class="card-tools">
                    <button type="button" class="btn btn-primary" onclick="showCreateModal()">
                        <i class="fas fa-plus"></i> Create New
                    </button>
                </div>
            </div>
            <div class="card-body">
                <table id="accountsTable" class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Username</th>
                            <th>Full Name</th>
                            <th>Email</th>
                            <th>Phone</th>
                            <th>Role</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Create/Edit Modal -->
<div class="modal fade" id="accountModal" tabindex="-1" role="dialog" aria-labelledby="accountModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="accountModalLabel">Account</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form id="accountForm" onsubmit="saveAccount(event)">
                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="userId" name="UserId" />
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="username">Username</label>
                                <input type="text" class="form-control" id="username" name="Username" required>
                            </div>
                            <div class="form-group">
                                <label for="password" id="passwordLabel">Password</label>
                                <input type="password" class="form-control" id="password" name="Password">
                                <small class="form-text text-muted" id="passwordHelp"></small>
                            </div>
                            <div class="form-group" id="confirmPasswordGroup">
                                <label for="confirmPassword">Confirm Password</label>
                                <input type="password" class="form-control" id="confirmPassword">
                            </div>
                            <div class="form-group">
                                <label for="fullName">Full Name</label>
                                <input type="text" class="form-control" id="fullName" name="FullName" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="email">Email</label>
                                <input type="email" class="form-control" id="email" name="Email" required>
                            </div>
                            <div class="form-group">
                                <label for="phone">Phone</label>
                                <input type="tel" class="form-control" id="phone" name="Phone" required>
                            </div>
                            <div class="form-group">
                                <label for="location">Location</label>
                                <input type="text" class="form-control" id="location" name="Location" required>
                            </div>
                            <div class="form-group">
                                <label for="roleId">Role</label>
                                <select class="form-control select2" id="roleId" name="RoleId" required>
                                    @foreach (var item in ViewData["Roles"] as SelectList)
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                </select>
                            </div>
                            <div class="form-group">
                                <label for="status">Status</label>
                                <select class="form-control" id="status" name="Status">
                                    <option value="1">Active</option>
                                    <option value="0">Inactive</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Delete Account</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this account?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" onclick="deleteAccount()">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let table;
        let deleteId = 0;
        let isEditMode = false;

        $(document).ready(function () {
            // Initialize Select2
            $('.select2').select2({
                theme: 'bootstrap4'
            });

            // Initialize DataTable
            table = $('#accountsTable').DataTable({
                ajax: {
                    url: '/Admin/Accounts/GetAccounts',
                    type: 'GET',
                    dataSrc: 'data'
                },
                columns: [
                    { data: 'userId' },
                    { data: 'username' },
                    { data: 'fullName' },
                    { data: 'email' },
                    { data: 'phone' },
                    { data: 'roleName' },
                    {
                        data: 'status',
                        render: function (data) {
                            return data == 1 ? 
                                '<span class="badge badge-success">Active</span>' : 
                                '<span class="badge badge-danger">Inactive</span>';
                        }
                    },
                    {
                        data: 'userId',
                        render: function (data) {
                            return `
                                <button class="btn btn-sm btn-info" onclick="showEditModal(${data})">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button class="btn btn-sm btn-danger" onclick="showDeleteModal(${data})">
                                    <i class="fas fa-trash"></i>
                                </button>
                            `;
                        }
                    }
                ]
            });
        });

        function showCreateModal() {
            isEditMode = false;
            $('#userId').val('');
            $('#accountForm')[0].reset();
            $('#passwordLabel').text('Password');
            $('#password').prop('required', true);
            $('#confirmPassword').prop('required', true);
            $('#confirmPasswordGroup').show();
            $('#passwordHelp').text('');
            $('#accountModalLabel').text('Create Account');
            $('#accountModal').modal('show');
        }

        function showEditModal(id) {
            isEditMode = true;
            $.get('/Admin/Accounts/GetAccount/' + id, function (response) {
                if (response.success) {
                    const account = response.data;
                    $('#userId').val(account.userId);
                    $('#username').val(account.username);
                    $('#fullName').val(account.fullName);
                    $('#email').val(account.email);
                    $('#phone').val(account.phone);
                    $('#location').val(account.location);
                    $('#roleId').val(account.roleId).trigger('change');
                    $('#status').val(account.status);
                    $('#password').prop('required', false);
                    $('#confirmPassword').prop('required', false);
                    $('#confirmPasswordGroup').hide();
                    $('#passwordLabel').text('New Password (leave blank to keep current)');
                    $('#passwordHelp').text('Leave blank to keep current password');
                    $('#accountModalLabel').text('Edit Account');
                    $('#accountModal').modal('show');
                } else {
                    toastr.error(response.message);
                }
            });
        }

        function showDeleteModal(id) {
            deleteId = id;
            $('#deleteModal').modal('show');
        }

        function validatePasswords() {
            const password = $('#password').val();
            const confirmPassword = $('#confirmPassword').val();
            
            if (!isEditMode || (isEditMode && password)) {
                if (password !== confirmPassword) {
                    toastr.error('Passwords do not match');
                    return false;
                }
            }
            return true;
        }

        function saveAccount(e) {
            e.preventDefault();
            
            if (!validatePasswords()) {
                return;
            }

            const form = $('#accountForm');
            const id = $('#userId').val();
            const url = id ? '/Admin/Accounts/Edit' : '/Admin/Accounts/Create';
            
            const formData = new FormData(form[0]);
            if (id && $('#password').val()) {
                formData.append('newPassword', $('#password').val());
            }
            
            $.ajax({
                url: url,
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    if (response.success) {
                        $('#accountModal').modal('hide');
                        table.ajax.reload();
                        toastr.success(response.message);
                    } else {
                        toastr.error(response.message);
                    }
                },
                error: function () {
                    toastr.error('An error occurred');
                }
            });
        }

        function deleteAccount() {
            if (!deleteId) return;

            $.ajax({
                url: '/Admin/Accounts/Delete/' + deleteId,
                type: 'POST',
                data: {
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                },
                success: function (response) {
                    $('#deleteModal').modal('hide');
                    if (response.success) {
                        table.ajax.reload();
                        toastr.success(response.message);
                    } else {
                        toastr.error(response.message);
                    }
                    deleteId = 0;
                },
                error: function () {
                    toastr.error('An error occurred');
                    deleteId = 0;
                }
            });
        }
    </script>
}
